{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Persons.js","components/PersonService.js","App.js","index.js"],"names":["Filter","nameFilter","handleFilterChange","value","onChange","Notification","notification","className","type","message","PersonForm","addNewPerson","handleNameChange","newNumber","newName","handleNumberChange","onSubmit","pattern","Persons","personsToShow","removePerson","map","person","name","number","onClick","baseUrl","personService","getAll","axios","get","create","newPerson","post","remove","personId","delete","update","put","id","App","useState","persons","setPersons","setNewName","setNewNumber","setNameFilter","setNotification","useEffect","then","response","data","length","filter","toLowerCase","includes","event","target","preventDefault","some","find","msg","window","confirm","updatedPersons","setTimeout","catch","error","concat","console","log","personToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cee26ecb.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({nameFilter, handleFilterChange}) => {\n    return (\n    <div>\n        filter shown with: <input value={nameFilter} onChange={handleFilterChange}></input>\n    </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({notification}) => {\n    if (notification == null){\n        return null\n    }\n\n    return(\n        <div className={notification.type}>\n            {notification.message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst PersonForm = ({addNewPerson, handleNameChange, newNumber, newName, handleNumberChange}) => {\n    return (\n    <form onSubmit={addNewPerson}>\n        <div>\n            name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n            number: <input type='tel' pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" value={newNumber} onChange={handleNumberChange}/>\n        </div>\n\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({personsToShow, removePerson}) => {\n    return (\n        personsToShow.map(person=>\n            <div key={person.name}>\n                {person.name} {person.number} \n                <button onClick={() => removePerson(person)}>remove</button>\n            </div>\n        )\n    )\n}\n\nexport default Persons","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => axios.get(baseUrl)\nconst create = newPerson => axios.post(baseUrl, newPerson)\nconst remove = personId => axios.delete(`${baseUrl}/${personId}`)\nconst update = person => axios.put(`${baseUrl}/${person.id}`, person)\n\nconst personService = {getAll, create, remove, update}\nexport default personService","import React, { useEffect, useState } from 'react'\n\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './components/PersonService'\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ nameFilter, setNameFilter ] = useState('')\n  const [ notification, setNotification ] = useState({})\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  },[])\n\n  const personsToShow = nameFilter.length \n    ? persons.filter(person => person.name.toLowerCase().includes(nameFilter.toLowerCase()))\n    : persons\n\n  const addNewPerson = (event) => {\n    event.preventDefault()\n    let newPerson = {\n      name:newName,\n      number:newNumber\n    }\n    if (!persons.some(person => person.name.toLowerCase() === newName.toLowerCase())){\n      personService\n        .create(newPerson)\n        .then(\n          response => {\n            setPersons(persons.concat(response.data))\n            setNotification({\n              message:`added ${newPerson.name}`,\n              type:\"success\"\n            })\n            setTimeout(() => {\n              setNotification(null) \n            }, 5000)\n          },\n          () => console.log('failed to add person')\n        )\n    }\n    else {\n      newPerson = {...newPerson, id:persons.find(person => person.name === newPerson.name).id}\n      const msg = `${newPerson.name} is already added to the phonebook, replace the old number with a new one?`\n      if (window.confirm(msg)){\n          personService\n            .update(newPerson)\n            .then(\n              () => {\n                const updatedPersons = persons.map(person => person.id === newPerson.id ? newPerson : person)\n                setPersons(updatedPersons)\n                setNotification({\n                  message:`updated ${newPerson.name}`,\n                  type:\"success\"\n                })\n                setTimeout(() => {\n                  setNotification(null) \n                }, 5000)\n              }\n            )\n            .catch(error => {\n              setNotification({\n                message: `Information of ${newPerson.name} has already been removed from server`,\n                type:'error'\n              })\n              setPersons(persons.filter(person => person.id !== newPerson.id))\n            })\n        }\n    }\n   \n    setNewName('')\n    setNewNumber('')\n  }\n\n  const removePerson = (personToRemove) => {\n    if(window.confirm(`remove ${personToRemove.name}?`)){\n      personService\n        .remove(personToRemove.id)\n        .then(\n          () => setPersons(persons.filter(person => person.id !== personToRemove.id)),\n          () => console.log(`failed to remove ${personToRemove.name}`)\n        )\n    }\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setNameFilter(event.target.value)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification}></Notification>\n      <Filter nameFilter={nameFilter} handleFilterChange={handleFilterChange}></Filter>\n      <h2>add a new</h2>\n      <PersonForm \n        newName={newName} \n        addNewPerson={addNewPerson} \n        handleNameChange={handleNameChange} \n        newNumber={newNumber} \n        handleNumberChange={handleNumberChange}>\n      </PersonForm>\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} removePerson={removePerson}></Persons>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}